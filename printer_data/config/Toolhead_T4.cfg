# If you are using CAN, define the board info. Make sure to change pin definitions also!
[mcu EBBT4]
#serial: /dev/serial/by-id/usb-Klipper_stm32f103xe_37FF6C063042413830360643-if00 #/dev/serial/by-id/usb-Klipper_stm32g0b1xx_260043001150425539393020-if00 dev/serial/by-id/usb-Klipper_stm32g0b1xx_0D0039000E50425539393020-if00
canbus_uuid: 0a76e9303407
#restart_method: command
# Extruder Example, change as needed. If this is T1, then should be something like extruder1


[adxl345 T4]
cs_pin: EBBT4: PB12
#spi_bus: spi2
spi_software_sclk_pin: EBBT4: PB10
spi_software_mosi_pin: EBBT4: PB11
spi_software_miso_pin: EBBT4: PB2
axes_map: z,-y,x

#[resonance_tester]
#accel_chip: adxl345
#probe_points: 175,175,20

[extruder4]
step_pin: EBBT4:PD0
dir_pin: EBBT4:PD1
enable_pin: !EBBT4:PD2
microsteps: 64
full_steps_per_rotation: 200 # Single-turn pulse number (200 is 1.8 degrees, 400 is 0.9 degrees)
rotation_distance: 4.637 # Driving pulley circumference mm
## Calibration step value: rotation_distance = <old rotation_distance> * <actual extrusion length> / <requested extrusion length>
#gear_ratio: 50:10 # Reduction ratio (Galileo gear ratio 7.5:1 and comment out this line; BMG is 50:17, output shaft in front, input shaft in rear)
nozzle_diameter: 0.400 # Nozzle diameter
filament_diameter: 1.750 # filament diameter
heater_pin: EBBT4: PB13 # Extrusion head heating rod control pin setting (e0)
sensor_type: Generic 3950 #Generic 3950 #my_thermistor_e #MAX31865 # Sensor model
#pullup_resistor: 11500
#spi_bus: spi1
#rtd_nominal_r: 100
#rtd_reference_r: 430
#rtd_num_of_wires: 2
sensor_pin: EBBT4:PA3 # Extrusion head sensor Pin (T_E0)
min_temp: -250                  
max_temp: 305                 
max_power: 1.0                
min_extrude_temp: 150         
control : pid
pid_kp : 27.159 #37
pid_ki : 13.037
pid_kd : 34.477 #26.477
pressure_advance: 0.032      
pressure_advance_smooth_time: 0.040    
max_extrude_cross_section: 8

[tmc2209 extruder4]
uart_pin: EBBT4: PA15
interpolate: True
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0 # Silence threshold (if silence is not required, please change the value to 0)
#uart_address:3


# Change tool number if needed here
[fan_generic PartFan_T4]
pin: EBBT4:PA1

# Change tool number if needed here
[heater_fan T4_hotend_fan]
pin: EBBT4:PA0
# Change extruder tool number if needed here
heater: extruder4
max_power: 1.0
heater_temp: 50.0
kick_start_time: 0.5
#tachometer_pin:EBBT2:PA1
#tachometer_ppr: 1
#tachometer_poll_interval: 0.0013

#Change tool number if needed in the next line, as well ast the last line
# [gcode_macro T4]
# variable_color: ""
# gcode:
#   SELECT_TOOL T=4

#change the tool numbers to the tool you are configuring, ie T0, T1, etc

[gcode_macro EBBT4]
variable_active: 0
variable_filament_consumed: 0
gcode:
  {% if printer.toolhead.homed_axes != "xyz" %}
    {action_respond_info("Please home XYZ first")}
  {% else %}
    _TOOLCHANGER_DISABLE_FILAMENT_SENSORS
    SET_GCODE_VARIABLE MACRO=EBBT4 VARIABLE=active VALUE=1
    ACTIVATE_EXTRUDER EXTRUDER=extruder4
    SELECT_TOOL T=4
  {% endif %}

[gcode_macro T4]
variable_realtool: "EBBT4"
variable_backuptool: ""
variable_color: ""
gcode:
  {% set consumed = printer["gcode_macro " ~ realtool].filament_consumed|int %}
  {% if consumed and backuptool %}
    { action_respond_info(realtool ~ " empty loading backup") }
    {backuptool}
  {% else %}
    { action_respond_info("Switching to " ~ realtool) }
    {realtool}
  {% endif %}

[neopixel led]
pin: EBBT4:PD3
chain_count: 3
color_order: GRBW
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.0
initial_WHITE: 1.0

[tool_probe_endstop]
crash_mintime: 0.7 # seconds to wait before announcing a crash, if the probe stops 
  #triggering before this, no crash is reported. 
crash_gcode:
    RESPOND TYPE=error MSG='Tool not detected, expected {printer.toolchanger.tool_number}. Pausing the print.' 
    M84
    TURN_OFF_HEATERS

# Change tool number if needed
[tool_probe T4]
pin: ^EBBT4:PB6 #^EBBT4:PB6
tool: 4
x_offset: 0 # X axis-sensor relative nozzle offset
y_offset: 0 # Y axis-sensor relative nozzle offset
z_offset: -.851 # Z axis-sensor relative nozzle offset
# drop_first_result: True # enable is on danger-klipper
speed: 3.0
samples: 3
samples_result: median
sample_retract_dist: 2.0
samples_tolerance: 0.02
samples_tolerance_retries: 3
activate_gcode:
    _TAP_PROBE_ACTIVATE HEATER=extruder4

[filament_switch_sensor filament_sensor_T4]
switch_pin: EBBT4:PB3
pause_on_runout: False
event_delay: 1.0
pause_delay: 0.1
runout_gcode:
  SET_GCODE_VARIABLE MACRO=EBBT4 VARIABLE=filament_consumed VALUE=1
  _RUNOUT_INIT
insert_gcode:
  M118 T4 reports: Filament Detected
  SET_GCODE_VARIABLE MACRO=EBBT4 VARIABLE=filament_consumed VALUE=0
  _FILAMENT_LOAD_INIT TOOL=4

#********************************************************************************************************

#////////////////////////////////////////Filament Unload macros/////////////////////////////////////////////////
# TODO: Make the gcode parametric
[gcode_button filament_unload_t4]
pin: EBBT4:PB4 # remove the negation "!" for sensor v1 - use just PA9 as example
press_gcode:  # filament unload procedure   
  _UNLOAD_TANGLE_INIT TOOL=4
release_gcode: # do not add any macro call here    
