[gcode_macro _APPLY_Z_HOME_FOR_TOOL_OFFSET]
variable_default_raise: 10.0
variable_tool: ''
variable_tool_z_offset: 0
variable_probe_z_offset: 0
variable_probe_compensate: 1
variable_applied: 0
variable_debug_output: 1
gcode:
  {% set raise = params.RAISE|default(default_raise)|float %}
  {% set probe_compensation = 0 %}
  {% if probe_compensate %}
    {% set probe_compensation = probe_z_offset %}
  {% endif %}

  G90 ; absolute mode
  G0 Z{raise} F1000
  {% if tool in printer %}
    {% if debug_output %}
      RESPOND TYPE=echo MSG='Current Adjustment: {applied}'
      RESPOND TYPE=echo MSG='Tool: {tool}'
      RESPOND TYPE=echo MSG='Probe Offset: {probe_z_offset}'
      RESPOND TYPE=echo MSG='Probe Compensation: {probe_compensation}'
      RESPOND TYPE=echo MSG='Tool Offset: {tool_z_offset}'
    {% endif %}
    {% if params.MESH is defined %}
      _REMOVE_Z_HOME_FOR_TOOL_OFFSET
      #{% set applied = probe_compensation %}
      {% if debug_output %}
        RESPOND TYPE=echo MSG='Bed Adjustment: {raise} = {raise + applied}'
      {% endif %}
      SET_KINEMATIC_POSITION Z={raise + applied}
    {% else %}
      _REMOVE_Z_HOME_FOR_TOOL_OFFSET
      {% set applied = probe_compensation + tool_z_offset %}
      {% if debug_output %}
        RESPOND TYPE=echo MSG='Bed Adjustment: {raise} = {raise + applied}'
      {% endif %}
      SET_KINEMATIC_POSITION Z={raise + applied}
    {% endif %} 
    G0 Z{raise} F1000
  {% endif %}