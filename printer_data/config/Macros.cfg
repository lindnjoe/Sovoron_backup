

[gcode_macro GET_VARIABLE]
gcode:
    {% set names = (params.NAME).split('.')|list %}
    {% set join = (params.JOIN)|default(1)|int %}
    
    {% set _dummy0 = namespace( break = 0 ) %}
    {% set _dummy1 = namespace( out = printer[names|first] ) %}
    
    {% for name in names if _dummy0.break == 0 %}
        {% if loop.index > 1 %}
            {% if name in _dummy1.out %}
                {% set _dummy1.out = _dummy1.out[name] %}
            {% elif name[0] in '0123456789' and _dummy1.out is iterable and _dummy1.out is not string and _dummy1.out is not mapping and _dummy1.out|length > name[0]|int %}
                {% set _dummy1.out = _dummy1.out[name|int] %}
            {% else %}
                {% set _dummy0.break = loop.index0 %}
            {% endif %}
        {% endif %}
    {% endfor %}
    
    {% if _dummy1.out is boolean %}
        { action_respond_info('Type: boolean') }
    {% elif _dummy1.out is float %}
        { action_respond_info('Type: float') }
    {% elif _dummy1.out is integer %}
        { action_respond_info('Type: integer') }
    {% elif _dummy1.out is mapping %}
        { action_respond_info('Type: mapping') }
    {% elif _dummy1.out is string %}
        { action_respond_info('Type: string') }
    {% elif _dummy1.out is iterable %}
        { action_respond_info('Type: iterable') }
    {% elif _dummy1.out is none %}
        { action_respond_info('Type: none') }
    {% elif _dummy1.out is undefined %}
        { action_respond_info('Type: undefined') }
    {% elif _dummy1.out is callable %}
        { action_respond_info('Type: callable') }
    {% else %}
        { action_respond_info('Type: unknown') }
    {% endif %}
    
    {% if join and _dummy1.out is iterable and _dummy1.out is not string and _dummy1.out is not mapping %}
        { action_respond_info('%s' % _dummy1.out|join("\n")) }
    {% else %}
        { action_respond_info('%s' % _dummy1.out) }
    {% endif %}
    
    {% if _dummy0.break != 0 %}
        { action_respond_info('"printer.%s" does not contain "%s"!' % (names[0:_dummy0.break]|join('.'), names[_dummy0.break])) }
    {% endif %}



[gcode_macro DUMP_VARIABLES]
gcode:
    {% set filter_name = params.NAME|default('')|string|lower %}
    {% set filter_value = params.VALUE|default('')|string|lower %}
    {% set show_cfg = params.SHOW_CFG|default(0)|int %}
    
    {% set out = [] %}

    {% for key1 in printer %}
        {% for key2 in printer[key1] %}
            {% if (show_cfg or not (key1|lower == 'configfile' and key2|lower in ['config', 'settings'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}
                {% set dummy = out.append("printer['%s'].%s = %s" % (key1, key2, printer[key1][key2])) %}
            {% endif %}
        {% else %}
            {% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}
                {% set dummy = out.append("printer['%s'] = %s" % (key1, printer[key1])) %}
            {% endif %}
        {% endfor %}
    {% endfor %}
    
    {action_respond_info(out|join("\n"))}

[gcode_macro M106] 
rename_existing: M106.1 
gcode: 
	{% set target = params.S|default(255)|int %} 
		SET_GCODE_VARIABLE MACRO=_TOOLGLOBALVARIABLES VARIABLE=fanspeed VALUE={target} 
	{% if printer.toolchanger.tool_number == -1 %} 
		SET_FAN_SPEED FAN=PartFan_T0 SPEED={target/255} 
	{% else %} 
		SET_FAN_SPEED FAN=PartFan_T{printer.toolchanger.tool_number} SPEED={target/255} 
	{% endif %} 
	M106.1 S{target}

[gcode_macro _TOOLGLOBALVARIABLES] 
variable_fanspeed: 0 
gcode: 
	{action_respond_info("This is only variables macro")}

#[gcode_macro BEEP]
#gcode:
#  SET_PIN PIN=beeper VALUE=1
#  G4 P10  
#  SET_PIN PIN=beeper VALUE=0

[gcode_macro mainled_on]
gcode:
    SET_PIN PIN=main_led VALUE=1

[gcode_macro mainled_off]
gcode:
    SET_PIN PIN=main_led VALUE=0

#--------------------------------------------------------------------#
#--------------------------------------------------------------------#

#[gcode_shell_command FACTORY_RESETS]
#command: /home/pii/factory_resets.sh
#timeout: 2.



[gcode_macro M104]
rename_existing: M104.1
description: [T<index>] [S<temperature>]
  Set tool temperature.
  T= Tool number, optional. If this parameter is not provided, the current tool is used.
  S= Target temperature
gcode:
  {% if params.T is defined %}
    {% set newparameters = "" %}
    {% set newparameters = newparameters ~ " T="~params.T %}
    {% if params.S is defined %}
      {% set newparameters = newparameters ~ " TARGET="~params.S %}
    {% endif %}
    SET_TOOL_TEMPERATURE{newparameters}
  {% else %}
    M104.1 {rawparams}
  {% endif %}

[gcode_macro M109]
rename_existing: M109.9999
description: [T<index>] [S<temperature>]
  Set tool temperature and wait.
  T= Tool number, optional. If this parameter is not provided, the current tool is used.
  S= Target temperature
  D= Dead-band (default is 1.5 degress) 
gcode:
    {% set s = params.S|float %}
    {% set deadband = params.D|default(1.5)|float %}
    {% set tn = params.T|default(printer.tool_probe_endstop.active_tool_number)|int %}
    {% set tool = printer.toolchanger.tool_names[tn]|default('') %}
    {% set extruder = printer[tool].extruder %}

    SET_HEATER_TEMPERATURE HEATER={extruder} TARGET={s}
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR={extruder} MINIMUM={s - (deadband/2)} MAXIMUM={s + (deadband/2)}   ; Wait for hotend temp (within 3 degrees)
    {% endif %}

#[gcode_macro M109]
#rename_existing: M109.1
#description: [T<index>] [S<temperature>]
#  Set tool temperature and wait.
#  T= Tool number, optional. If this parameter is not provided, the current tool is used.
#  S= Target temperature
#gcode:
#  {% if params.T is defined %}
#    {% set newparameters = "" %}
#    {% set newparameters = newparameters ~ " T="~params.T %}
#    {% if params.S is defined %}
#      {% set newparameters = newparameters ~ " TARGET="~params.S %}
#    {% endif %}
#    SET_TOOL_TEMPERATURE{newparameters}
#  {% else %}
#    M104 {rawparams} # M109.1 {rawparams}
#  {% endif %}
#
[force_move]
enable_force_move: True

[gcode_macro _global_var]
variable_pause_park:{'x': 30, 'y': 300, 'z': 10, 'e': 1}
variable_cancel_park:{'x': 30, 'y': 300, 'z': 10, 'e': 1}
variable_z_maximum_lifting_distance: 345
variable_pause_resume_travel_speed: 150
variable_bed_mesh_calibrate_target_temp: 60
variable_load_filament_extruder_temp: 220
gcode:

[gcode_macro _IDLE_TIMEOUT]
gcode:
    {% if printer.print_stats.state == "paused" %}
      RESPOND TYPE=echo MSG="No operations in 10min!"
    {% else %}
     M84
     TURN_OFF_HEATERS
    {% endif %}

[gcode_macro _ALL_FAN_OFF]
gcode:
    M106 S0
    M107

[gcode_macro CLEAN_NOZZLE] 
gcode:
    {% if printer.toolhead.homed_axes != "xyz" %}
       G28
    {% endif %}
    G90 
    G1 X200 Y0 Z0.3 F9000 #X348 Y0 Z0.3 F9000
    M117 Nozzle heating...
    M109 S200
    G91
    G1 Z10 F300
    G90
    M106 S255
    M104 S130
    M117 Clean nozzle
    G1 X200 Y-5 F9000 #X315 Y360 F9000
    G1 Z0.2 F300
    G1 X205 F4500 #X352 F4500
    G1 Z-.4 
    G1 Y-6 X209 #Y360 X324
    G1 Y-6 X228 #Y360 X345
    G1 Y-6 X209 #Y360 X324
    G1 Y-6 X228 #Y360 X345
    G1 Y-6 X209 #Y360 X324
    G1 Y-6 X228 #Y360 X345
    G1 Y-6 X209 #Y360 X324
    G1 Y-6 X228 #Y360 X345
    G1 Y-6 X209 #Y360 X324
    G1 Y-6 X210 #Y360 X325
    G1 Y-4 X209 Z5 #Y356 X324 Z5
    G1 Z-.4
    G1 Y-8 X209 #Y360 X324
    G1 Y-5 X211 #Y357 X326
    G1 Y-8 X211 #Y360 X326
    G1 Y-5 X213 #Y357 X328
    G1 Y-8 X215 #Y360 X330
    G1 Y-5 X217 #Y357 X332
    G1 Y-8 X219 #Y360 X334
    G1 Y-5 X221 #Y357 X336
    G1 Y-8 X222 #Y360 X338
    G1 Y-5 X223 #Y357 X340
    G1 Y-8 X209 #Y360 X324
    G1 Y-5 X211 #Y357 X326
    G1 Y-8 X211 #Y360 X326
    G1 Y-5 X213 #Y357 X328
    G1 Y-8 X215 #Y360 X330
    G1 Y-5 X217 #Y357 X332
    G1 Y-8 X219 #Y360 X334
    G1 Y-5 X221 #Y357 X336
    G1 Y-8 X222 #Y360 X338
    G1 Y-5 X223 #Y357 X340
    G1 Y-8 X209 #Y360 X324
    G1 Y-5 X211 #Y357 X326
    G1 Y-8 X211 #Y360 X326
    G1 Y-5 X213 #Y357 X328
    G1 Y-8 X215 #Y360 X330
    G1 Y-5 X217 #Y357 X332
    G1 Y-8 X219 #Y360 X334
    G1 Y-5 X221 #Y357 X336
    G1 Y-8 X222 #Y360 X338

    G1 Y-6 X209 #Y360 X324
    G1 Y-6 X228 #Y360 X345
    G1 Y-6 X209 #Y360 X324
    G1 Y-6 X228 #Y360 X345
    G1 Y-6 X209 #Y360 X324
    G1 Y-6 X228 #Y360 X345
    G1 Y-6 X209 #Y360 X324
    G1 Y-6 X228 #Y360 X345
    G1 Y-6 X209 #Y360 X324
    G1 Y-6 X210 #Y360 X325
    G1 Y-4 X209 Z5 #Y356 X324 Z5
    G1 Z-.4
    G1 Y-8 X209 #Y360 X324
    G1 Y-5 X211 #Y357 X326
    G1 Y-8 X211 #Y360 X326
    G1 Y-5 X213 #Y357 X328
    G1 Y-8 X215 #Y360 X330
    G1 Y-5 X217 #Y357 X332
    G1 Y-8 X219 #Y360 X334
    G1 Y-5 X221 #Y357 X336
    G1 Y-8 X222 #Y360 X338
    G1 Y-5 X223 #Y357 X340
    G1 Y-8 X209 #Y360 X324
    G1 Y-5 X211 #Y357 X326
    G1 Y-8 X211 #Y360 X326
    G1 Y-5 X213 #Y357 X328
    G1 Y-8 X215 #Y360 X330
    G1 Y-5 X217 #Y357 X332
    G1 Y-8 X219 #Y360 X334
    G1 Y-5 X221 #Y357 X336
    G1 Y-8 X222 #Y360 X338
    G1 Y-5 X223 #Y357 X340
    G1 Y-8 X209 #Y360 X324
    G1 Y-5 X211 #Y357 X326
    G1 Y-8 X211 #Y360 X326
    G1 Y-5 X213 #Y357 X328
    G1 Y-8 X215 #Y360 X330
    G1 Y-5 X217 #Y357 X332
    G1 Y-8 X219 #Y360 X334
    G1 Y-5 X221 #Y357 X336
    G1 Y-8 X222 #Y360 X338
   
    M400
    M117 Clean Finish
    M104 S150
    M107 
    G91
    G1 Z10 F300
    G90
    G28 Z0
    M104 S0


#[delayed_gcode TEST_BELT]
#initial_duration: 0.3
#gcode:
#    {% set x_freq = printer.save_variables.variables.x_freq|float %}
#    {% set y_freq = printer.save_variables.variables.y_freq|float %}
#    {% set show_freq = printer.save_variables.variables.show_freq %}
#    {% if show_freq == 1 %}
#        M117 x {x_freq}, y {y_freq}
#        SAVE_VARIABLE VARIABLE=show_freq VALUE=0
#    {% endif %}

[gcode_macro QUAD_GANTRY_LEVEL]
rename_existing:QUAD_GANTRY_LEVEL_BASE
gcode:
    SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=qgling VALUE=True
    {% set mesh_name = "default" %}
    {% set mesh_calibrate_temp = printer['gcode_macro _global_var'].bed_mesh_calibrate_target_temp|int %}
    {% set current_target_temp  = printer.heater_bed.target|int %}

    {action_respond_info("Check Heating!")}
    {% if printer.heater_bed.temperature != mesh_calibrate_temp %}
        M140 S{mesh_calibrate_temp}
        {action_respond_info("The bed target temperature was not reached!")}
        {action_respond_info("Bed heating...")}
        M190 S{mesh_calibrate_temp}
    {% endif %}

    {% if printer.toolhead.homed_axes|lower != "xyz" %}
        G28
    {% endif %}

    QUAD_GANTRY_LEVEL_BASE

    {% if current_target_temp == 0 %}
        M140 S0
    {% endif %}
    SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=qgling VALUE=False

[gcode_macro PROBE_CALIBRATE]
rename_existing:PROBE_CALIBRATE_BASE
gcode:
    {% set current_target_temp  = printer.heater_bed.target|int %}
    {% set z_offset_calibrate_temp = printer['gcode_macro _global_var'].bed_mesh_calibrate_target_temp|int %}

    {action_respond_info("z_offset_calibrate")}
    {% if printer.heater_bed.temperature != z_offset_calibrate_temp %}
        M140 S{z_offset_calibrate_temp}
        {action_respond_info("The bed target temperature was not reached!")}
        {action_respond_info("Bed heating...")}
        M190 S{z_offset_calibrate_temp}
    {% endif %}

    G28
    PROBE_CALIBRATE_BASE
    TESTZ z=-4


[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BED_MESH_CALIBRATE_BASE
gcode:
    
    {% set mesh_name = "default" %}
    {% set mesh_calibrate_temp = printer['gcode_macro _global_var'].bed_mesh_calibrate_target_temp|int %}
    {% set current_target_temp  = printer.heater_bed.target|int %}

    {action_respond_info("Check Heating!")}
    {% if printer.heater_bed.temperature != mesh_calibrate_temp %}
        M140 S{mesh_calibrate_temp}
        {action_respond_info("The bed target temperature was not reached!")}
        {action_respond_info("Bed heating...")}
        M190 S{mesh_calibrate_temp}
    {% endif %}

    {% if printer.toolhead.homed_axes|lower != "xyz" %}
        G28
    {% endif %}

    BED_MESH_CLEAR
    
    BED_MESH_CALIBRATE_BASE ADAPTIVE=1
    
    {% if current_target_temp == 0 %}
        M140 S0  
    {% endif %}

[gcode_macro G34]
gcode:
    BED_MESH_CLEAR 
    {% if printer.toolhead.homed_axes|lower != "xyz" %}
      G28
    {% else %}
      G28 Z
    {% endif %}
    QUAD_GANTRY_LEVEL 
    G28 Z 
    G0 X175 Y175 Z30 F3600

[delayed_gcode bed_mesh_init]
initial_duration: .01
gcode:
    BED_MESH_PROFILE LOAD=default



[gcode_macro CANCEL_PRINT]
description: 
rename_existing: CANCEL_PRINT_BASE
gcode:
    TOOL_UNLOAD
    {% set x_park = printer['gcode_macro _global_var'].cancel_park.x|float %}
    {% set y_park = printer['gcode_macro _global_var'].cancel_park.y|float %}
    {% set z_park = printer['gcode_macro _global_var'].cancel_park.z|float %}
    {% set z_lift_max = printer['gcode_macro _global_var'].z_maximum_lifting_distance %}
    {% set e_restract = printer['gcode_macro _global_var'].cancel_park.e|float %}
    {% set e_mintemp  = printer.configfile.settings['extruder'].min_extrude_temp %}

    CANCEL_PRINT_BASE

    M117 Cancel Print!!!
    G91
    {% if printer['filament_switch_sensor filament_sensor'].enabled == True and 
          printer['filament_switch_sensor filament_sensor'].filament_detected == True
    %}
        {% if (printer.extruder.target != 0 and printer.extruder.temperature >= printer.extruder.target) or
              printer.extruder.temperature >= e_mintemp
        %}
            G1 E-{e_restract} F500
        {% else %}
            {action_respond_info("Nozzle not hot enough")}
        {% endif %}
    {% endif %}

    {%if (printer.gcode_move.position.z + 10) < z_lift_max %}
        G1 Z+10 F3000
    {% else %}
        G1 Z+{(z_lift_max - printer.gcode_move.position.z)} F3000
    {% endif %}
        G90
        G1 X{x_park} Y{y_park} F9000

    TURN_OFF_HEATERS
    _ALL_FAN_OFF

    CLEAR_PAUSE
    M84 X Y Z E

    M117 Ready
    {action_respond_info("Cancel Print Success!")}
    #SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=state VALUE='"Prepare"'
   # SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=record_extruder_temp VALUE=0  
   # SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=max_record_extruder_temp VALUE=0


[gcode_macro PAUSE]
rename_existing: PAUSE_BASE
variable_state: 'normal'
gcode:
    {% if printer.pause_resume.is_paused == False %}
        {% set x_park = printer['gcode_macro _global_var'].pause_park.x|float %}
        {% set y_park = printer['gcode_macro _global_var'].pause_park.y|float %}
        {% set e_restract = printer['gcode_macro _global_var'].pause_park.e|float %}
        {% set z_lift_max = printer['gcode_macro _global_var'].z_maximum_lifting_distance %}

        {% set state = params.STATE if 'filament_change' in params.STATE else 'normal' %}
        
        {action_respond_info("Pause Print!")}
        
        PAUSE_BASE
        M117 Pause Print!!!
        G91
        {% if (printer.gcode_move.position.z + 5) < z_lift_max %}
            G1 Z+5 F3000
        {% else %}
            G1 Z+{(z_lift_max - printer.gcode_move.position.z)} F3000
        {% endif %}
        G90
        {% if printer.gcode_move.position.x != x_park and
                printer.gcode_move.position.y != y_park     
        %}
            G1 X{x_park} Y{y_park} F{printer["gcode_macro _global_var"].pause_resume_travel_speed * 60}
        {% endif %}

        M104 S{printer.extruder.target}
    
        {% if state == 'normal' %}
            {% if (printer.extruder.temperature + 5 >= printer.extruder.target) and (printer.extruder.temperature >= printer.configfile.settings['extruder'].min_extrude_temp) %}
                {% if printer['filament_switch_sensor filament_sensor'].enabled == True and 
                    printer['filament_switch_sensor filament_sensor'].filament_detected == True
                %}
                    G91
                    G1 E-{e_restract} F300
                    G90
                {% elif printer['filament_switch_sensor filament_sensor'].enabled == True and 
                        printer['filament_switch_sensor filament_sensor'].filament_detected != True %}
                    G91
                   # G1 E+95 F300
                   # G1 E-10 F1500
                   # G1 E-20 F600
                    M400
                    G4 P3000
                   # G1 E-50 F300 
                    G90
                {% endif %}
            {% endif %}
        {% elif state == 'filament_change' %}
            {% if (printer.extruder.temperature + 5 >= printer.extruder.target) and (printer.extruder.temperature >= printer.configfile.settings['extruder'].min_extrude_temp) %}
                G91
               # G1 E+25 F300
               # G1 E-10 F1500
               # G1 E-20 F600
                M400
                G4 P3000
               # G1 E-50 F300 
                G90
            {% endif %}
        {% endif %}
    {% endif %}


[delayed_gcode _resume_wait]
gcode:
    {% if printer['gcode_macro RESUME'].execute|lower != 'false' %}
        RESUME
    {% endif %}


[gcode_macro RESUME]
description: Pause the actual running print
rename_existing: RESUME_BASE
variable_state: 'normal'
gcode:
    {% set e_restract = printer['gcode_macro _global_var'].pause_park.e|float %}
    {% set extruder_target_temp = printer.extruder.target|int %}

    {% set state = params.STATE if 'filament_change' in params.STATE else 'normal' %}

    {% if state == 'filament_change' %}
        {% if printer["filament_switch_sensor filament_sensor"].enable == True and
              printer["filament_switch_sensor filament_sensor"].filament_detected != True
        %}
            {action_respond_info("Please Insert filament in Sensor!")}
        {% else %}
            {% if printer.extruder.temperature + 5 >= printer.extruder.target %}
                G91
               # G1 E30 F300
               # G1 E10 F150
                G90
            {% else %}
                M140 S{extruder_target_temp}
                {action_respond_info("Nozzle not hot enough!")}
                {action_respond_info("Nozzle heating...")}
                M190 S{extruder_target_temp}
                G91
               # G1 E30 F300
               # G1 E10 F150
                G90
            {% endif %}
            {action_respond_info("Print resumming!")}
            RESUME_BASE
        {% endif %}
    {% elif state == 'normal' %}
        {% if printer['filament_switch_sensor filament_sensor'].enable != True and
              printer['filament_switch_sensor filament_sensor'].filament_detected != True
        %}
            {action_respond_info("Please Insert filament in Sensor!")}
        {% else %}
            {action_respond_info("Print resumming!")}
            G91
            G1 E{e_restract} F300
            G90
            M117 Printing now!!!
            RESUME_BASE
        {% endif %}
    {% endif %}


[gcode_macro LOAD_FILAMENT]
gcode:
    {% set extruder_temp = printer['gcode_macro _global_var'].load_filament_extruder_temp|int %}
    {% set current_target_temp  = printer.extruder.target|int %}

    {% if printer.print_stats.state != "printing" %}
        {% if printer.print_stats.state != "paused" %}
            M104 S{extruder_temp}
            M117 Nozzle heating...
            {action_respond_info("Nozzle not hot enough!")}
            {action_respond_info("Nozzle heating...")}
            M109 S{extruder_temp}
        {% else %}
            {% if printer.extruder.target == 0 %}
                M104 S{extruder_temp}
                M117 Nozzle heating...
                {action_respond_info("Nozzle not hot enough!")}
                {action_respond_info("Nozzle heating...")}
                M109 S{extruder_temp}
            {% else %}
                M104 S{printer.extruder.target}
                M117 Nozzle heating...
                {action_respond_info("Nozzle not hot enough!")}
                {action_respond_info("Nozzle heating...")}
                M109 S{printer.extruder.target}
            {% endif %}
        {% endif %}
        M117 Extruding...
        G91 
        G1 E50 F300
        G1 E50 F150
        G1 E30 F150
        G90
        M400
        M117 Extrude Finish
        M400
        {% if current_target_temp == 0 or printer.print_stats.state != "paused"%}
            M104 S0
        {% endif %}
    {% else %}
        {action_respond_info("Don't load filament during printing!!!")}
    {% endif %}

    
[gcode_macro UNLOAD_FILAMENT]
gcode:
    {% set extruder_temp = printer['gcode_macro _global_var'].load_filament_extruder_temp|int %}
    {% set current_target_temp  = printer.extruder.target|int %}

    {% if printer.print_stats.state != "printing" %}
        {% if printer.print_stats.state != "paused" %}
            M104 S{extruder_temp}
            M117 Nozzle heating...
            {action_respond_info("Nozzle not hot enough!")}
            {action_respond_info("Nozzle heating...")}
            M109 S{extruder_temp}
        {% else %}
            {% if printer.extruder.target == 0 %}
                M104 S{extruder_temp}
                M117 Nozzle heating...
                {action_respond_info("Nozzle not hot enough!")}
                {action_respond_info("Nozzle heating...")}
                M109 S{extruder_temp}
            {% else %}
                M104 S{printer.extruder.target}
                M117 Nozzle heating...
                {action_respond_info("Nozzle not hot enough!")}
                {action_respond_info("Nozzle heating...")}
                M109 S{printer.extruder.target}
            {% endif %}
        {% endif %}
        M117 Retracting...
        G91
        G1 E+25 F300
        G1 E-10 F1500
        G1 E-20 F600
        M400
        G4 P3000
        G1 E-50 F300
        G1 E-50 F300
        G90
        M400
        M117 Retract Finish
        M400
        {% if current_target_temp == 0 or printer.print_stats.state != "paused"%}
            M104 S0
        {% endif %}
    {% else %}
        {action_respond_info("Don't unload filament during printing!!!")}
    {% endif %}

#[gcode_macro M109]
#rename_existing: M99109
#gcode:    
#    {% set s = params.S|float %}    
#    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  
#    {% if s != 0 %}
#        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s-1} MAXIMUM={s+1}   
#    {% endif %}
#    
[gcode_macro M190]

rename_existing: M99190
gcode:    
    {% set s = params.S|float %}
    M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}   
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s-2} MAXIMUM={s+2}  
    {% endif %}

#[gcode_macro M106]
#gcode:
#    {% set fan = 'fan' + (params.P|int if params.P is defined else 0)|string %}
#    {% set speed = (params.S|float / 255 if params.S is defined else 1.0) %}
#    {% if fan == 'fan3'%}
#            SET_FAN_SPEED FAN={fan} SPEED={speed}
#    {% else %}
#        SET_FAN_SPEED FAN={'fan0'} SPEED={speed}
#        SET_FAN_SPEED FAN={'fan1'} SPEED={speed}
#    {% endif %}
    
#[gcode_macro M107]
#gcode:
#    {% set fan = 'fan' + (params.P|int if params.P is defined else 0)|string %}
#    {% if fan == 'fan3'%}
#            SET_FAN_SPEED FAN={fan} SPEED=0
#    {% else %}
#        SET_FAN_SPEED FAN={'fan0'} SPEED=0
#        SET_FAN_SPEED FAN={'fan1'} SPEED=0
#    {% endif %}
    
[gcode_macro M600]
gcode:
    PAUSE STATE=filament_change
