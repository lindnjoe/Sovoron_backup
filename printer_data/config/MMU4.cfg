[save_variables]
filename: ~/printer_data/config/variablesmmu.cfg

[gcode_macro TOOL_SELECT]
gcode:
  {% set TOOL = params.TOOL|int %}
  M117 "Setting tool to TOOL{TOOL}"
  {% if TOOL == 6 %}
    MANUAL_STEPPER stepper=selector1 MOVE=0
  {% elif TOOL == 7 %}
    MANUAL_STEPPER stepper=selector1 MOVE=0.5
  {% elif TOOL == 9 %}
    MANUAL_STEPPER stepper=selector1 MOVE=1.0
  {% elif TOOL == 8 %}
    MANUAL_STEPPER stepper=selector1 MOVE=1.5
  {% endif %}
  SET_GCODE_VARIABLE MACRO=TOOL_INIT VARIABLE=tool VALUE={TOOL}



[gcode_macro RESET_SEQUENCE]
description: Resets the tool changer and prepares for the next tool change.
gcode:
  M117 "Homing selector and resetting tool changer"
  
  # Home the selector and Chameleon position no matter what
  MANUAL_STEPPER STEPPER=selector1 SET_POSITION=0
  MANUAL_STEPPER STEPPER=chameleon1 SET_POSITION=0
  
  {% set restore_tool = printer["gcode_macro TOOL_CHANGE"].restore_tool %}
  
  {% if restore_tool == -1 %}
    # If tool is in an in-between state, reset restore_tool to 10
    M117 "Restoring tool changer to default state"
    
    SET_GCODE_VARIABLE MACRO=TOOL_CHANGE VARIABLE=restore_tool VALUE=10
    SAVE_VARIABLE VARIABLE=restore_tool VALUE=10
    
    M117 "Tool changer reset complete, restore_tool set to 10"
  
  {% elif restore_tool in [6, 7, 8, 9] %}
    # If a valid tool (6-9) is loaded, free the filament path for the restored tool
    M117 "Resetting tool changer for tool {restore_tool}"
    
    {% if restore_tool == 6 %}
      MANUAL_STEPPER stepper=selector1 MOVE=1
    {% elif restore_tool == 7 %}
      MANUAL_STEPPER stepper=selector1 MOVE=1.5
    {% elif restore_tool == 9 %}
      MANUAL_STEPPER stepper=selector1 MOVE=0
    {% elif restore_tool == 8 %}
      MANUAL_STEPPER stepper=selector1 MOVE=0.5
    {% endif %}
    
    M117 "Tool path freed for tool {restore_tool}"
  
  {% else %}
    M117 "No valid tool loaded or system in in-between state"
  {% endif %}
  
  # Ensure that the reset flag is cleared after the sequence completes
  SET_GCODE_VARIABLE MACRO=TOOL_CHANGE VARIABLE=reset_flag VALUE=0
  SAVE_VARIABLE VARIABLE=reset_flag VALUE=0
  M117 "Reset flag cleared after tool change"




[gcode_macro SELECT_TOOL]
rename_existing: SELECT_TOOL1
gcode:
  
    {% set curtool = params.T | int %}
     
   {% if curtool == 0 or curtool == 1 or curtool == 2 or curtool == 3 or curtool == 4 or curtool == 5 %}
    SELECT_TOOL1 T={curtool}
    
    {% else %}
     SELECT_TOOL1 T=5
     TOOL_CHANGE TOOL={params.T}
   {% endif %}




[gcode_macro Quick_Tip_Shaping]
gcode:
  {% set moves = params.MOVES | default(3) | int %}
  M83
  {% for _ in range(moves) %}
  G92 E0
  G1 E10 F1500
  G92 E0
  G1 E-15 F1500
  {% endfor %}
  G1 E-60 F2000
#QUICK_TIP_SHAPING MOVES=3


[gcode_macro CHAMELEON_UNLOAD]
description: Unloads the filament from the tubing
gcode:
  {% set TOOL = printer["gcode_macro TOOL_CHANGE"].tool|int %}
  {% set YSPLIT_DIST = printer["gcode_macro TOOL_CHANGE"].ysplit_distance|default(1730)|int %}
  {% set SPEED = printer["gcode_macro TOOL_CHANGE"].chameleon_speed|default(90)|int %}
  {% set ACC = printer["gcode_macro TOOL_CHANGE"].chameleon_acc|default(50)|int %}
  
  M117 "Unloading filament for tool {TOOL}"
  MANUAL_STEPPER STEPPER=chameleon1 SET_POSITION=0
  
  {% if TOOL in [6, 7] %}
    M117 "Moving tool {TOOL} by -{YSPLIT_DIST}"
    MANUAL_STEPPER stepper=chameleon1 MOVE=-{YSPLIT_DIST} SPEED={SPEED} ACCEL={ACC}
  {% elif TOOL in [8, 9] %}
    M117 "Moving tool {TOOL} by {YSPLIT_DIST}"
    MANUAL_STEPPER stepper=chameleon1 MOVE={YSPLIT_DIST} SPEED={SPEED} ACCEL={ACC}
  {% endif %}
  
  M117 "Unloading complete"
  MANUAL_STEPPER STEPPER=chameleon1 SET_POSITION=0
  G92 E0
  
  



[gcode_macro CHAMELEON_LOAD]
description: Loads the filament into the extruder Bowden
gcode:
  {% set TOOL = printer["gcode_macro TOOL_CHANGE"].tool|int %}
  {% set YSPLIT_DIST = printer["gcode_macro TOOL_CHANGE"].ysplit_distance|default(1690)|int %}
  {% set SPEED = printer["gcode_macro TOOL_CHANGE"].chameleon_speed|default(90)|int %}
  {% set ACC = printer["gcode_macro TOOL_CHANGE"].chameleon_acc|default(50)|int %}
  
  M117 "Loading filament for tool {TOOL}"
  MANUAL_STEPPER STEPPER=chameleon1 SET_POSITION=0

  {% if TOOL in [6, 7] %}
    M117 "Moving tool {TOOL} by {YSPLIT_DIST}"
    MANUAL_STEPPER stepper=chameleon1 MOVE={YSPLIT_DIST} SPEED={SPEED} ACCEL={ACC}
  {% elif TOOL in [8, 9] %}
    M117 "Moving tool {TOOL} by -{YSPLIT_DIST}"
    MANUAL_STEPPER stepper=chameleon1 MOVE=-{YSPLIT_DIST} SPEED={SPEED} ACCEL={ACC}
  {% endif %}
  
  M117 "Loading complete"
  MANUAL_STEPPER STEPPER=chameleon1 SET_POSITION=0
  G92 E0
  


[gcode_macro TOOL_INIT]
description: Homes the tool selector. Needed before any tool change.
variable_tool: 10
variable_ysplit_distance: 1730 #600
variable_chameleon_speed: 90
variable_chameleon_acc: 50
variable_restore: 10
gcode:
  M117 "Homing tool selector..."

  # Home the tool selector
  MANUAL_STEPPER STEPPER=selector1 SET_POSITION=0 
  MANUAL_STEPPER STEPPER=selector1 MOVE=-1.65
  MANUAL_STEPPER STEPPER=selector1 SET_POSITION=0 
  MANUAL_STEPPER STEPPER=selector1 MOVE=0.16  # Adjust as needed
  MANUAL_STEPPER STEPPER=selector1 SET_POSITION=0 
  
  # Set the restore_tool variable to 10 (no tool selected) and save it
  SAVE_VARIABLE VARIABLE=restore_tool VALUE=10
  M117 "restore_tool value reset to 10 and saved."


[gcode_macro T6]
variable_color: ""
variable_tool: 6
gcode:
  SELECT_TOOL1 T=5
  TOOL_CHANGE TOOL=6
  

[gcode_macro T7]
variable_color: ""
variable_tool: 7
gcode:
  SELECT_TOOL1 T=5
  TOOL_CHANGE TOOL=7
  

[gcode_macro T8]
variable_color: ""
variable_tool: 8
gcode:
  SELECT_TOOL1 T=5
  TOOL_CHANGE TOOL=8
  

[gcode_macro T9]
variable_color: ""
variable_tool: 9
gcode:
  SELECT_TOOL1 T=5
  TOOL_CHANGE TOOL=9
  
  
[gcode_macro Clippy_Cut]
gcode:
  SET_SERVO SERVO=clippy ANGLE=0

[gcode_macro Clippy_Release]
gcode:
  SET_SERVO SERVO=clippy ANGLE=120


 
[gcode_macro TS6]
gcode:
  TOOL_SELECT TOOL=6
  SET_GCODE_VARIABLE MACRO=TOOL_CHANGE VARIABLE=restore_tool VALUE=6

[gcode_macro TS7]
gcode:
  TOOL_SELECT TOOL=7
  SET_GCODE_VARIABLE MACRO=TOOL_CHANGE VARIABLE=restore_tool VALUE=7

[gcode_macro TS8]
gcode:
  TOOL_SELECT TOOL=8
  SET_GCODE_VARIABLE MACRO=TOOL_CHANGE VARIABLE=restore_tool VALUE=8

[gcode_macro TS9]
gcode:
  TOOL_SELECT TOOL=9
  SET_GCODE_VARIABLE MACRO=TOOL_CHANGE VARIABLE=restore_tool VALUE=9

[gcode_macro _Clippy_Chop]
description: Perform the clippy chop.
variable_clippy_servo_name: 'clippy'
variable_clippy_minimum_angle: 120 # Idle position
variable_clippy_cut_angle: 0 # Cutting position
variable_x_cut_position: 2.0 # Position for the cut
gcode:
 G90
 G1 X15 Y338.19 F16000
 SET_TMC_CURRENT STEPPER=stepper_x CURRENT=2.0
 SET_TMC_CURRENT STEPPER=stepper_y CURRENT=2.0
 SET_SERVO SERVO={clippy_servo_name} ANGLE={clippy_cut_angle}
 G1 X{x_cut_position} F300
 G4 P1450
 G1 X80 F16000
 SET_SERVO SERVO={clippy_servo_name} ANGLE={clippy_minimum_angle}
 SET_TMC_CURRENT STEPPER=stepper_x CURRENT=1.13
 SET_TMC_CURRENT STEPPER=stepper_y CURRENT=1.13

[gcode_macro TOOL_UNLOAD]
description: Unloads the currently selected tool and resets
gcode:
  # Retrieve the stored restore_tool value from persistent save_variables
  {% set restore_tool = printer.save_variables.variables.restore_tool|default(10)|int %}

  # If no tool is loaded, exit
  {% if restore_tool == 10 %}
    M117 "No tool currently loaded. Skipping unload."
    M400
    RETURN  # Skip further processing
  {% endif %}

  # Set extruder temp for unloading
  {% set extruder_temp = printer['gcode_macro _global_var'].load_filament_extruder_temp|int %}
  {% set current_target_temp = printer.extruder.target|int %}

  # Heat nozzle before unloading
  M104 S{extruder_temp}
  M117 "Nozzle heating..."
  {action_respond_info("Nozzle not hot enough!")}
  {action_respond_info("Nozzle heating...")}
  M109 S{extruder_temp}

  # Get tool settings
  {% set TOOL = printer["gcode_macro TOOL_INIT"].tool %}
  {% set YSPLIT_DIST = printer["gcode_macro TOOL_INIT"].ysplit_distance %}

  # Unload sequence
  M117 "Unloading Tool {restore_tool}"
  SELECT_TOOL1 T=5
  G92 E0
  M109 S190 T5  ; Ensure nozzle is at unload temp
  _EXTRUDER_UNLOAD
  UNSELECT_TOOL

  # Unload filament using Chameleon system
  TOOL_SELECT TOOL={TOOL}
  G4 P250
  CHAMELEON_UNLOAD
  TOOL_INIT  

  # Cool down
  M104 S0
  G92 E0
  T0
  {action_respond_info("Tool Unloaded")}

  M400

  # Reset stored tool in persistent variables
  SAVE_VARIABLE VARIABLE=restore_tool VALUE=10
  M104 S0



[gcode_macro TOOL_CHANGE]
description: Changes the filament to the selected tool (6, 7, 8, or 9)
variable_tool: 10
variable_extruder_temp: 220
variable_chameleon_load_distance: 1730
variable_chameleon_unload_distance: 1730
variable_chameleon_sync_distance: 80
variable_restore_tool: 10
variable_reset_flag: 0  # 0 indicates not ready, 1 indicates ready
gcode:
  {% set TOOL = params.TOOL|int %}
  
  # Save the current tool and restore_tool variables to -1 to indicate an in-between state
  SET_GCODE_VARIABLE MACRO=TOOL_CHANGE VARIABLE=tool VALUE=-1
  SET_GCODE_VARIABLE MACRO=TOOL_CHANGE VARIABLE=restore_tool VALUE=-1
  SAVE_GCODE_VARIABLE MACRO=TOOL_CHANGE VARIABLE=tool
  SAVE_GCODE_VARIABLE MACRO=TOOL_CHANGE VARIABLE=restore_tool
  M117 "Starting tool change to {TOOL}"
  
  {% set CURRENT_TOOL = printer["gcode_macro TOOL_CHANGE"].tool|default(10)|int %}
  {% set EXTRUDER_TEMP = printer["gcode_macro TOOL_CHANGE"].extruder_temp|default(220)|int %}
  {% set current_target_temp = printer.extruder.target|int %}
  {% set LOAD_DISTANCE = printer["gcode_macro TOOL_CHANGE"].chameleon_load_distance|default(1730)|int %}
  {% set UNLOAD_DISTANCE = printer["gcode_macro TOOL_CHANGE"].chameleon_unload_distance|default(1730)|int %}
  {% set SYNC_DISTANCE = printer["gcode_macro TOOL_CHANGE"].chameleon_sync_distance|default(80)|int %}
  {% set RESTORE=printer["gcode_macro TOOL_CHANGE"].restore_tool|default(10)|int %}
  
  M117 "Heating nozzle before extruder moves"
  M109 S{EXTRUDER_TEMP}  ; Wait for nozzle to reach temperature

  M117 "Resetting Chameleon before movements"
  MANUAL_STEPPER STEPPER=chameleon1 SET_POSITION=0
  M83
  G92 E0  ; Reset Chameleon position

  {% if RESTORE == 10 %}
    M117 "No tool currently loaded. Proceeding to load tool {TOOL}."
    UNSELECT_TOOL
    M117 "Homing selector for tool change"
    MANUAL_STEPPER STEPPER=selector1 SET_POSITION=0 
    MANUAL_STEPPER STEPPER=selector1 MOVE=-1.65
    MANUAL_STEPPER STEPPER=selector1 SET_POSITION=0 
    MANUAL_STEPPER STEPPER=selector1 MOVE=0.16  # Adjust as needed
    MANUAL_STEPPER STEPPER=selector1 SET_POSITION=0 
    MANUAL_STEPPER STEPPER=chameleon1 SET_POSITION=0 
    SET_GCODE_VARIABLE MACRO=TOOL_CHANGE VARIABLE=restore_tool VALUE=10

  {% else %}
    M117 "Tool {RESTORE} currently loaded. Unloading before tool change."
    
    M117 "Cutting filament (Clippy Chop)"
    _CLIPPY_CHOP
    M400

    M117 "Unselecting tool to dock it"
    UNSELECT_TOOL
    M400

    M117 "Unloading filament from extruder"
    M83
    G92 E0 
    G1 E-100 F600
    M400
    G92 E0

    M117 "Moving selector to tool {RESTORE} before unloading Chameleon"
    {% if RESTORE == 6 %}
      MANUAL_STEPPER stepper=selector1 MOVE=0
    {% elif RESTORE == 7 %}
      MANUAL_STEPPER stepper=selector1 MOVE=0.5
    {% elif RESTORE == 8 %}
      MANUAL_STEPPER stepper=selector1 MOVE=1.0
    {% elif RESTORE == 9 %}
      MANUAL_STEPPER stepper=selector1 MOVE=1.5
    {% endif %}
    M400

    M117 "Unloading filament with Chameleon"
    M83
    {% if RESTORE in [6, 7] %}
      MANUAL_STEPPER STEPPER=chameleon1 SET_POSITION=0 
      MANUAL_STEPPER STEPPER=chameleon1 MOVE=-{UNLOAD_DISTANCE} SPEED=90
    {% elif RESTORE in [8, 9] %}
      MANUAL_STEPPER STEPPER=chameleon1 SET_POSITION=0 
      MANUAL_STEPPER STEPPER=chameleon1 MOVE={UNLOAD_DISTANCE} SPEED=90
    {% endif %}
    M400
    G92 E0
  {% endif %}
  
  M117 "Moving selector to new tool {TOOL}"
  {% if TOOL == 6 %}
    MANUAL_STEPPER stepper=selector1 MOVE=0
  {% elif TOOL == 7 %}
    MANUAL_STEPPER stepper=selector1 MOVE=0.5
  {% elif TOOL == 8 %}
    MANUAL_STEPPER stepper=selector1 MOVE=1.0
  {% elif TOOL == 9 %}
    MANUAL_STEPPER stepper=selector1 MOVE=1.5
  {% endif %}
  M400
  
  M117 "Loading Chameleon filament for tool {TOOL}"
  M83
  {% if TOOL in [6, 7] %}
    MANUAL_STEPPER STEPPER=chameleon1 SET_POSITION=0 
    MANUAL_STEPPER STEPPER=chameleon1 MOVE={LOAD_DISTANCE} SPEED=90
  {% elif TOOL in [8, 9] %}
    MANUAL_STEPPER STEPPER=chameleon1 SET_POSITION=0 
    MANUAL_STEPPER STEPPER=chameleon1 MOVE=-{LOAD_DISTANCE} SPEED=90
  {% endif %}
  M400
  
  M117 "Syncing extruder for loading"
  M83
  G92 E0
  MANUAL_STEPPER STEPPER=chameleon1 SET_POSITION=0
  {% if TOOL in [6, 7] %}
    MANUAL_STEPPER STEPPER=chameleon1 MOVE={SYNC_DISTANCE} SPEED=10 SET_POSITION=0 SYNC=0
  {% elif TOOL in [8, 9] %}
    MANUAL_STEPPER STEPPER=chameleon1 MOVE=-{SYNC_DISTANCE} SPEED=10 SET_POSITION=0 SYNC=0
  {% endif %}
  G1 E80 F600
  MANUAL_STEPPER STEPPER=chameleon1 SYNC=1
  MANUAL_STEPPER STEPPER=chameleon1 SET_POSITION=0
  M400

  M117 "Freeing filament path for tool {TOOL}"
  {% if TOOL == 6 %}
    MANUAL_STEPPER stepper=selector1 MOVE=1 
  {% elif TOOL == 7 %}
    MANUAL_STEPPER stepper=selector1 MOVE=1.5
  {% elif TOOL == 9 %}
    MANUAL_STEPPER stepper=selector1 MOVE=0
  {% elif TOOL == 8 %}
    MANUAL_STEPPER stepper=selector1 MOVE=0.5
  {% endif %}

  M117 "Final extruder load"
  G1 E100 F600
  G92 E0
  G1 E30 F250
  M400
  
  M117 "Updating restore_tool variable to {TOOL}"
  SET_GCODE_VARIABLE MACRO=TOOL_CHANGE VARIABLE=restore_tool VALUE={TOOL}
  
  M117 "Tool change complete. Selecting tool {TOOL}"
  SELECT_TOOL1 T=5

  {% if printer.print_stats.state != "printing" %}
    M104 S0
    M117 "Extruder heater turned off"
  {% endif %}

  # Save the restore_tool variable so it's retained after a restart
  SAVE_VARIABLE VARIABLE=restore_tool VALUE={TOOL}
  
  # Set reset flag to "1" after tool change to indicate readiness for reset
  SAVE_VARIABLE VARIABLE=reset_flag VALUE=1
  M117 "Tool change complete, reset_flag set to 1"
